{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\n/*\n * @desc: add a list of items to array at the specified index\n */\nexport var insertAt = function insertAt(index) {\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var addition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  try {\n    var itemsBeforeIndex = source.slice(0, index);\n    var itemsAfterIndex = source.slice(index);\n    return [].concat(_toConsumableArray(itemsBeforeIndex), _toConsumableArray(addition), _toConsumableArray(itemsAfterIndex));\n  } catch (error) {\n    throw error;\n  }\n};\n/*\n * @desc: remove array item at the specified index\n */\n\nexport var removeAt = function removeAt(index) {\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  try {\n    return [].concat(_toConsumableArray(source.slice(0, index)), _toConsumableArray(source.slice(index + 1)));\n  } catch (error) {\n    throw error;\n  }\n};\n/*\n * @desc: replace array item at the specified index\n */\n\nexport var replaceAt = function replaceAt(index) {\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var replacement = arguments.length > 2 ? arguments[2] : undefined;\n\n  try {\n    return [].concat(_toConsumableArray(source.slice(0, index)), [replacement], _toConsumableArray(source.slice(index + 1)));\n  } catch (error) {\n    throw error;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}