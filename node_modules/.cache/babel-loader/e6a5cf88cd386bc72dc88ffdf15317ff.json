{"ast":null,"code":"import { apiPathToNonTenantVersion } from './api-base'; // apiPathToCompanyDNBSearch\n\nvar apiPathToDNBSearch = function apiPathToDNBSearch() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref.env,\n      consulVersion = _ref.consulVersion;\n\n  return \"\".concat(apiPathToNonTenantVersion({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/address\");\n}; // apiPathToCompanyParties\n\n\nvar apiPathToDNBOrg = function apiPathToDNBOrg() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref2.env,\n      consulVersion = _ref2.consulVersion;\n\n  return \"\".concat(apiPathToDNBSearch({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/parties\");\n}; // apiPathToCompanyDetails\n\n\nvar apiPathToSearchOrgDomain = function apiPathToSearchOrgDomain() {\n  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref3.env,\n      consulVersion = _ref3.consulVersion;\n\n  return \"\".concat(apiPathToDNBOrg({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/search\");\n}; // apiPathToCompany\n\n\nvar apiPathToSearchOrgName = function apiPathToSearchOrgName() {\n  var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref4.env,\n      consulVersion = _ref4.consulVersion;\n\n  return \"\".concat(apiPathToDNBOrg({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/name\");\n}; // apiPathToCompanyDomain\n\n\nvar apiPathToDNBDomain = function apiPathToDNBDomain() {\n  var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref5.env,\n      consulVersion = _ref5.consulVersion;\n\n  return \"\".concat(apiPathToDNBSearch({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/domain\");\n}; // apiPathToCompanyDomainValidator\n\n\nvar apiPathToValidateOrgDomain = function apiPathToValidateOrgDomain() {\n  var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref6.env,\n      consulVersion = _ref6.consulVersion;\n\n  return \"\".concat(apiPathToDNBDomain({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/validator\");\n}; // apiPathToCity\n\n\nvar apiPathToDNBCity = function apiPathToDNBCity() {\n  var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref7.env,\n      consulVersion = _ref7.consulVersion;\n\n  return \"\".concat(apiPathToDNBSearch({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/city\");\n};\n\nvar apiPathToSearchCity = function apiPathToSearchCity() {\n  var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref8.env,\n      consulVersion = _ref8.consulVersion;\n\n  return \"\".concat(apiPathToDNBCity({\n    env: env,\n    consulVersion: consulVersion\n  }), \"/search\");\n};\n\nvar organizationApiPath = function organizationApiPath(type, options) {\n  if (!type) {\n    throw Error('missing required argument - type');\n  }\n\n  if (type === 'dnb search') {\n    return apiPathToDNBSearch(options);\n  }\n\n  if (type === 'dnb org') {\n    return apiPathToDNBOrg(options);\n  }\n\n  if (type === 'search org domain') {\n    return apiPathToSearchOrgDomain(options);\n  }\n\n  if (type === 'search org name') {\n    return apiPathToSearchOrgName(options);\n  }\n\n  if (type === 'dnb domain') {\n    return apiPathToDNBDomain(options);\n  }\n\n  if (type === 'validate domain') {\n    return apiPathToValidateOrgDomain(options);\n  }\n\n  if (type === 'dnb city') {\n    return apiPathToDNBCity(options);\n  }\n\n  if (type === 'search city') {\n    return apiPathToSearchCity(options);\n  }\n};\n\nexport default organizationApiPath;","map":{"version":3,"sources":["/Users/huyster/ui-workspace/coi-common/src/lib/coi-path/api/api-organization.js"],"names":["apiPathToNonTenantVersion","apiPathToDNBSearch","env","consulVersion","apiPathToDNBOrg","apiPathToSearchOrgDomain","apiPathToSearchOrgName","apiPathToDNBDomain","apiPathToValidateOrgDomain","apiPathToDNBCity","apiPathToSearchCity","organizationApiPath","type","options","Error"],"mappings":"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","sourcesContent":["import { apiPathToNonTenantVersion } from './api-base';\n\n// apiPathToCompanyDNBSearch\nconst apiPathToDNBSearch = ({ env, consulVersion } = {}) => {\n  return `${apiPathToNonTenantVersion({env, consulVersion})}/address`;\n}\n\n// apiPathToCompanyParties\nconst apiPathToDNBOrg = ({ env, consulVersion } = {}) => {\n  return `${apiPathToDNBSearch({env, consulVersion})}/parties`;\n}\n\n// apiPathToCompanyDetails\nconst apiPathToSearchOrgDomain = ({ env, consulVersion } = {}) => {\n  return `${apiPathToDNBOrg({env, consulVersion})}/search`;\n}\n\n// apiPathToCompany\nconst apiPathToSearchOrgName = ({ env, consulVersion } = {}) => {\n  return `${apiPathToDNBOrg({env, consulVersion})}/name`;\n}\n\n// apiPathToCompanyDomain\nconst apiPathToDNBDomain = ({ env, consulVersion } = {}) => {\n    return `${apiPathToDNBSearch({env, consulVersion})}/domain`;\n}\n\n// apiPathToCompanyDomainValidator\nconst apiPathToValidateOrgDomain = ({ env, consulVersion } = {}) => {\n    return `${apiPathToDNBDomain({env, consulVersion})}/validator`\n}\n\n// apiPathToCity\nconst apiPathToDNBCity = ({ env, consulVersion } = {}) => {\n  return `${apiPathToDNBSearch({env, consulVersion})}/city`;\n}\n\nconst apiPathToSearchCity = ({ env, consulVersion } = {}) => {\n  return `${apiPathToDNBCity({ env, consulVersion })}/search`;\n}\n\nconst organizationApiPath = (type, options) => {\n  if (!type) {\n    throw Error('missing required argument - type');\n  }\n\n  if (type === 'dnb search') {return apiPathToDNBSearch(options);}\n  if (type === 'dnb org') {return apiPathToDNBOrg(options);}\n  if (type === 'search org domain') {return apiPathToSearchOrgDomain(options);}\n  if (type === 'search org name') {return apiPathToSearchOrgName(options);}\n  if (type === 'dnb domain') {return apiPathToDNBDomain(options);}\n  if (type === 'validate domain') {return apiPathToValidateOrgDomain(options);}\n  if (type === 'dnb city') {return apiPathToDNBCity(options);}\n  if (type === 'search city') {return apiPathToSearchCity(options);}\n};\n\nexport default organizationApiPath;\n"]},"metadata":{},"sourceType":"module"}