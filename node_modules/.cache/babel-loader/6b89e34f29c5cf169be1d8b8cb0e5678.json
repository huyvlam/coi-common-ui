{"ast":null,"code":"import { urlParamToObject } from 'LIB/coi-util/path';\nimport { cookieToObject } from 'LIB/coi-util/cookie';\nimport localeInfoList from 'LIB/coi-locale/locale-info-list';\nimport { LOCALE_NAME_AR_SA, LOCALE_NAME_CS_CZ, LOCALE_NAME_DE_DE, LOCALE_NAME_EN_US, LOCALE_NAME_ES_CO, LOCALE_NAME_ES_ES, LOCALE_NAME_FR_CA, LOCALE_NAME_FR_FR, LOCALE_NAME_IT_IT, LOCALE_NAME_JA_JP, LOCALE_NAME_KO_KR, LOCALE_NAME_PL_PL, LOCALE_NAME_PT_BR, LOCALE_NAME_RU_RU, LOCALE_NAME_TH_TH, LOCALE_NAME_TR_TR, LOCALE_NAME_VI_VN, LOCALE_NAME_ZH_CN, LOCALE_NAME_ZH_TW } from 'LIB/coi-locale/locale-name';\nvar DEFAULT_LOCALE = LOCALE_NAME_EN_US;\n\nvar parseUrlQuery = function parseUrlQuery() {\n  var _urlParamToObject = urlParamToObject(),\n      ui_locale = _urlParamToObject.ui_locale;\n\n  return ui_locale;\n};\n\nvar parseCookie = function parseCookie() {\n  var _cookieToObject = cookieToObject(),\n      oneid_locale = _cookieToObject.oneid_locale;\n\n  return oneid_locale;\n};\n\nvar parseWindowNavigator = function parseWindowNavigator() {\n  return window.navigator.language;\n};\n/**\n * @desc: Determine user language locale in the following order:\n *        1. Url query string. (ex: http://identity.com?ui_locale=en_US)\n *        2. Browser cookie\n *        3. Window OS default language\n * @return {string}  Returns locale\n */\n\n\nvar getLocale = function getLocale() {\n  var ui_locale = parseUrlQuery();\n  if (ui_locale) return sanitizeOutput(ui_locale);\n  var oneid_locale = parseCookie();\n  if (oneid_locale) return sanitizeOutput(oneid_locale);\n  var window_navigator = parseWindowNavigator();\n  if (window_navigator) return sanitizeOutput(window_navigator);\n  return sanitizeOutput(DEFAULT_LOCALE);\n};\n\nvar sanitizeOutput = function sanitizeOutput(locale) {\n  switch (locale) {\n    case 'ar_SA':\n    case 'ar-SA':\n    case 'ar':\n      return LOCALE_NAME_AR_SA;\n\n    case 'cs_CZ':\n    case 'cs-CZ':\n    case 'cs':\n      return LOCALE_NAME_CS_CZ;\n\n    case 'de_DE':\n    case 'de-DE':\n    case 'de':\n      return LOCALE_NAME_DE_DE;\n\n    case 'es_CO':\n    case 'es-CO':\n      return LOCALE_NAME_ES_CO;\n\n    case 'es_ES':\n    case 'es-ES':\n    case 'es':\n      return LOCALE_NAME_ES_ES;\n\n    case 'fr_CA':\n    case 'fr-CA':\n      return LOCALE_NAME_FR_CA;\n\n    case 'fr_FR':\n    case 'fr-FR':\n    case 'fr':\n      return LOCALE_NAME_FR_FR;\n\n    case 'it_IT':\n    case 'it-IT':\n    case 'it':\n      return LOCALE_NAME_IT_IT;\n\n    case 'ja_JP':\n    case 'ja-JP':\n    case 'ja':\n      return LOCALE_NAME_JA_JP;\n\n    case 'ko_KR':\n    case 'ko-KR':\n    case 'ko':\n      return LOCALE_NAME_KO_KR;\n\n    case 'pl_PL':\n    case 'pl-PL':\n    case 'pl':\n      return LOCALE_NAME_PL_PL;\n\n    case 'pt_BR':\n    case 'pt-BR':\n    case 'pt':\n      return LOCALE_NAME_PT_BR;\n\n    case 'ru_RU':\n    case 'ru-RU':\n    case 'ru':\n      return LOCALE_NAME_RU_RU;\n\n    case 'th_TH':\n    case 'th-TH':\n    case 'th':\n      return LOCALE_NAME_TH_TH;\n\n    case 'tr_TR':\n    case 'tr-TR':\n    case 'tr':\n      return LOCALE_NAME_TR_TR;\n\n    case 'vi_VN':\n    case 'vi-VN':\n    case 'vi':\n      return LOCALE_NAME_VI_VN;\n\n    case 'zh_CN':\n    case 'zh-CN':\n    case 'zh':\n      return LOCALE_NAME_ZH_CN;\n\n    case 'zh_TW':\n    case 'zh-TW':\n      return LOCALE_NAME_ZH_TW;\n\n    case 'en_US':\n    case 'en-US':\n    case 'en':\n    default:\n      return LOCALE_NAME_EN_US;\n  }\n};\n\nexport var COI_LOCALE = getLocale();\nexport var COI_LOCALE_INFO = localeInfoList.find(function (locale) {\n  return locale.name === COI_LOCALE;\n});","map":null,"metadata":{},"sourceType":"module"}