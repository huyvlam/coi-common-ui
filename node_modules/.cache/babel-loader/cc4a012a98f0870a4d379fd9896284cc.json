{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport getNavState from 'LIB/coi-navstate';\nimport browserPath from 'LIB/coi-path/browser';\nimport { idpApiPath } from 'LIB/coi-path/api';\nimport { urlParamToObject } from 'LIB/coi-util/path';\nimport { createKeycloakRequest } from 'LIB/coi-util/keycloak';\nimport { COI_CLIENT, COI_TENANT, COI_VERSION } from 'LIB/coi-path/path-config';\n/**\n * @desc: create redirectUrl based on COI_CLIENT, COI_TENANT, COI_VERSION in case navstate does not provide one\n */\n\nvar createRedirectUrl = function createRedirectUrl() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$tenant = _ref.tenant,\n      tenant = _ref$tenant === void 0 ? COI_TENANT : _ref$tenant,\n      _ref$client = _ref.client,\n      client = _ref$client === void 0 ? COI_CLIENT : _ref$client;\n\n  var uiClient = client === 'tenancy' || client === 'offering' ? client : 'profile';\n  return \"\".concat(window.location.origin, \"/ui/tenants/\").concat(tenant, \"/\").concat(COI_VERSION, \"/\").concat(uiClient, \"-ui\");\n};\n/**\n * @desc check navstate for redirect url, if nav state is not provided, create a default redirect url\n * @param{string} tenant      user tenant\n * @return {promise} a promise which will be resolved with { redirectUrl, ...rest }\n */\n\n\nexport function getRedirectUrl() {\n  return _getRedirectUrl.apply(this, arguments);\n}\n\nfunction _getRedirectUrl() {\n  _getRedirectUrl = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _ref2,\n        _ref2$tenant,\n        tenant,\n        navState,\n        _navState$redirectUrl,\n        redirectUrl,\n        rest,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, _ref2$tenant = _ref2.tenant, tenant = _ref2$tenant === void 0 ? COI_TENANT : _ref2$tenant;\n            _context.prev = 1;\n            _context.next = 4;\n            return getNavState({\n              tenant: tenant\n            });\n\n          case 4:\n            navState = _context.sent;\n\n            if (!(navState === null)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              redirectUrl: createRedirectUrl()\n            });\n\n          case 7:\n            _navState$redirectUrl = navState.redirectUrl, redirectUrl = _navState$redirectUrl === void 0 ? createRedirectUrl() : _navState$redirectUrl, rest = _objectWithoutProperties(navState, [\"redirectUrl\"]);\n            return _context.abrupt(\"return\", _objectSpread({\n              redirectUrl: redirectUrl\n            }, rest));\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            throw _context.t0;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n  return _getRedirectUrl.apply(this, arguments);\n}\n\n;\n/**\n * @desc: check navstate for \"isDiscovery\"\n *        if true -> return url for IDP discovery\n *        if false ->  return default signin url\n */\n\nexport function getSigninUrl() {\n  return _getSigninUrl.apply(this, arguments);\n}\n\nfunction _getSigninUrl() {\n  _getSigninUrl = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var _ref3,\n        _ref3$client,\n        client,\n        _ref6,\n        isDiscovery,\n        redirectUrl,\n        _urlParamToObject,\n        email,\n        keycloakReq,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref3 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, _ref3$client = _ref3.client, client = _ref3$client === void 0 ? COI_CLIENT : _ref3$client;\n            _context2.next = 3;\n            return getRedirectUrl();\n\n          case 3:\n            _ref6 = _context2.sent;\n            isDiscovery = _ref6.isDiscovery;\n            redirectUrl = _ref6.redirectUrl;\n            _urlParamToObject = urlParamToObject(), email = _urlParamToObject.email;\n\n            if (!(isDiscovery || client === 'enrollment-ui')) {\n              _context2.next = 10;\n              break;\n            }\n\n            keycloakReq = createKeycloakRequest({\n              redirectUrl: redirectUrl\n            });\n            return _context2.abrupt(\"return\", idpApiPath('base', _objectSpread({}, keycloakReq, {}, email)));\n\n          case 10:\n            return _context2.abrupt(\"return\", redirectUrl);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getSigninUrl.apply(this, arguments);\n}\n\n;\n/**\n * @desc: redirect page to specified url\n * @param: [refreshPage] to redirect using window.history.pushState, set refreshPage = false\n */\n\nexport var redirectTo = function redirectTo(_ref4) {\n  var url = _ref4.url,\n      errorCode = _ref4.errorCode;\n\n  try {\n    if (url && url.constructor === String) {\n      window.location.href = url;\n    } else if (errorCode && errorCode.constructor === Number) {\n      window.location.href = \"\".concat(window.location.href, \"/error\").concat(errorCode);\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport function redirectToExternalIDP(_x) {\n  return _redirectToExternalIDP.apply(this, arguments);\n}\n\nfunction _redirectToExternalIDP() {\n  _redirectToExternalIDP = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref5) {\n    var tenant, _ref7, isDiscovery, redirectUrl;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            tenant = _ref5.tenant;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return getRedirectUrl({\n              tenant: tenant\n            });\n\n          case 4:\n            _ref7 = _context3.sent;\n            isDiscovery = _ref7.isDiscovery;\n            redirectUrl = _ref7.redirectUrl;\n\n            if (isDiscovery) {\n              redirectTo({\n                url: redirectUrl\n              });\n            } else {\n              redirectTo({\n                url: browserPath('profile', {\n                  tenant: tenant\n                })\n              });\n            }\n\n            _context3.next = 13;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](1);\n            throw _context3.t0;\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 10]]);\n  }));\n  return _redirectToExternalIDP.apply(this, arguments);\n}\n\n;","map":null,"metadata":{},"sourceType":"module"}