{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { COI_LOCALE } from 'LIB/coi-locale';\nimport { LOCALE_NAME_AR_SA, LOCALE_NAME_CS_CZ, LOCALE_NAME_DE_DE, LOCALE_NAME_EN_US, LOCALE_NAME_ES_CO, LOCALE_NAME_ES_ES, LOCALE_NAME_FR_CA, LOCALE_NAME_FR_FR, LOCALE_NAME_IT_IT, LOCALE_NAME_JA_JP, LOCALE_NAME_KO_KR, LOCALE_NAME_PL_PL, LOCALE_NAME_PT_BR, LOCALE_NAME_RU_RU, LOCALE_NAME_TH_TH, LOCALE_NAME_TR_TR, LOCALE_NAME_VI_VN, LOCALE_NAME_ZH_CN, LOCALE_NAME_ZH_TW } from 'LIB/coi-locale/locale-name';\nimport AR_SA_CONTENT from './ar-sa/ar-sa-content';\nimport CS_CZ_CONTENT from './cs-cz/cs-cz-content';\nimport DE_DE_CONTENT from './de-de/de-de-content';\nimport EN_US_CONTENT from './en-us/en-us-content';\nimport ES_CO_CONTENT from './es-co/es-co-content';\nimport ES_ES_CONTENT from './es-es/es-es-content';\nimport FR_CA_CONTENT from './fr-ca/fr-ca-content';\nimport FR_FR_CONTENT from './fr-fr/fr-fr-content';\nimport IT_IT_CONTENT from './it-it/it-it-content';\nimport JA_JP_CONTENT from './ja-jp/ja-jp-content';\nimport KO_KR_CONTENT from './ko-kr/ko-kr-content';\nimport PL_PL_CONTENT from './pl-pl/pl-pl-content';\nimport PT_BR_CONTENT from './pt-br/pt-br-content';\nimport RU_RU_CONTENT from './ru-ru/ru-ru-content';\nimport TH_TH_CONTENT from './th-th/th-th-content';\nimport TR_TR_CONTENT from './tr-tr/tr-tr-content';\nimport VI_VN_CONTENT from './vi-vn/vi-vn-content';\nimport ZH_CN_CONTENT from './zh-cn/zh-cn-content';\nimport ZH_TW_CONTENT from './zh-tw/zh-tw-content';\n/**\n * @desc: add your newly created shared/app content in getContent method\n */\n\nexport default function getContent(name) {\n  try {\n    var _mergeContent = mergeContent(),\n        BUTTON_LABEL = _mergeContent.BUTTON_LABEL,\n        CONSENT = _mergeContent.CONSENT,\n        CONTACT = _mergeContent.CONTACT,\n        COUNTRY_LABEL = _mergeContent.COUNTRY_LABEL,\n        EMAIL = _mergeContent.EMAIL,\n        ERROR = _mergeContent.ERROR,\n        INPUT_DESC = _mergeContent.INPUT_DESC,\n        INPUT_LABEL = _mergeContent.INPUT_LABEL,\n        INPUT_PLACEHOLDER = _mergeContent.INPUT_PLACEHOLDER,\n        LINK = _mergeContent.LINK,\n        ENROLLMENT_APP = _mergeContent.ENROLLMENT_APP,\n        PROFILE_APP = _mergeContent.PROFILE_APP,\n        RECOVERY_APP = _mergeContent.RECOVERY_APP,\n        ULM_APP = _mergeContent.ULM_APP;\n\n    switch (name) {\n      case 'button label':\n        return BUTTON_LABEL;\n\n      case 'consent':\n        return CONSENT;\n\n      case 'contact':\n        return CONTACT;\n\n      case 'country label':\n        return COUNTRY_LABEL;\n\n      case 'email':\n        return EMAIL;\n\n      case 'error':\n        return ERROR;\n\n      case 'input desc':\n        return INPUT_DESC;\n\n      case 'input label':\n        return INPUT_LABEL;\n\n      case 'input placeholder':\n        return INPUT_PLACEHOLDER;\n\n      case 'link':\n        return LINK;\n\n      case 'enrollment app':\n        return ENROLLMENT_APP;\n\n      case 'profile app':\n        return PROFILE_APP;\n\n      case 'recovery app':\n        return RECOVERY_APP;\n\n      case 'ulm app':\n        return ULM_APP;\n\n      default:\n        return null;\n    }\n  } catch (error) {\n    throw error;\n  }\n}\n;\n\nfunction loadContent() {\n  var locale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : COI_LOCALE;\n\n  switch (locale) {\n    case LOCALE_NAME_AR_SA:\n      return AR_SA_CONTENT;\n\n    case LOCALE_NAME_CS_CZ:\n      return CS_CZ_CONTENT;\n\n    case LOCALE_NAME_DE_DE:\n      return DE_DE_CONTENT;\n\n    case LOCALE_NAME_ES_CO:\n      return ES_CO_CONTENT;\n\n    case LOCALE_NAME_ES_ES:\n      return ES_ES_CONTENT;\n\n    case LOCALE_NAME_FR_CA:\n      return FR_CA_CONTENT;\n\n    case LOCALE_NAME_FR_FR:\n      return FR_FR_CONTENT;\n\n    case LOCALE_NAME_IT_IT:\n      return IT_IT_CONTENT;\n\n    case LOCALE_NAME_JA_JP:\n      return JA_JP_CONTENT;\n\n    case LOCALE_NAME_KO_KR:\n      return KO_KR_CONTENT;\n\n    case LOCALE_NAME_PL_PL:\n      return PL_PL_CONTENT;\n\n    case LOCALE_NAME_PT_BR:\n      return PT_BR_CONTENT;\n\n    case LOCALE_NAME_RU_RU:\n      return RU_RU_CONTENT;\n\n    case LOCALE_NAME_TH_TH:\n      return TH_TH_CONTENT;\n\n    case LOCALE_NAME_TR_TR:\n      return TR_TR_CONTENT;\n\n    case LOCALE_NAME_VI_VN:\n      return VI_VN_CONTENT;\n\n    case LOCALE_NAME_ZH_CN:\n      return ZH_CN_CONTENT;\n\n    case LOCALE_NAME_ZH_TW:\n      return ZH_TW_CONTENT;\n\n    case LOCALE_NAME_EN_US:\n    default:\n      return EN_US_CONTENT;\n  }\n}\n/**\n * @desc: Merge localized content with en_us\n *        Using en_us content as default in case new localized content is not yet translated\n * @output: appContent\n */\n\n\nfunction mergeContent() {\n  var base = EN_US_CONTENT;\n  var sections = Object.keys(base);\n  var translated = loadContent(COI_LOCALE);\n  var content = Object.create({});\n  sections.forEach(function (section) {\n    Object.defineProperty(content, section, {\n      value: _objectSpread({}, base[section], {}, translated[section]),\n      enumerable: true,\n      writable: false\n    });\n  });\n  return content;\n}","map":null,"metadata":{},"sourceType":"module"}