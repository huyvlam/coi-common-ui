{"ast":null,"code":"import { COI_TENANT } from 'LIB/coi-path/path-config';\nimport { authBasePath } from './api-base';\nimport { keyCloakVersion } from './consul.config.json';\n\nvar apiPathToAuth = function apiPathToAuth() {\n  return \"\".concat(authBasePath(), \"api\");\n};\n\nvar apiPathToAuthTenant = function apiPathToAuthTenant() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$tenant = _ref.tenant,\n      tenant = _ref$tenant === void 0 ? COI_TENANT : _ref$tenant;\n\n  return \"\".concat(apiPathToAuth(), \"/tenants/\").concat(tenant);\n};\n\nvar apiPathToAuthTenantVersion = function apiPathToAuthTenantVersion() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      tenant = _ref2.tenant;\n\n  return \"\".concat(apiPathToAuthTenant({\n    tenant: tenant\n  }), \"/\").concat(keyCloakVersion);\n};\n\nvar apiPathToManageAccess = function apiPathToManageAccess() {\n  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      tenant = _ref3.tenant;\n\n  return \"\".concat(apiPathToAuthTenantVersion({\n    tenant: tenant\n  }), \"/am\");\n};\n\nvar apiPathToProtocol = function apiPathToProtocol(_ref4) {\n  var tenant = _ref4.tenant;\n  return \"\".concat(apiPathToManageAccess({\n    tenant: tenant\n  }), \"/protocol\");\n};\n\nvar apiPathToOpenConnect = function apiPathToOpenConnect(_ref5) {\n  var tenant = _ref5.tenant;\n  return \"\".concat(apiPathToProtocol({\n    tenant: tenant\n  }), \"/openid-connect\");\n};\n\nvar apiPathToOpenAuth = function apiPathToOpenAuth(_ref6) {\n  var tenant = _ref6.tenant;\n  return \"\".concat(apiPathToOpenConnect({\n    tenant: tenant\n  }), \"/auth\");\n};\n\nvar apiPathToOpenUserInfo = function apiPathToOpenUserInfo(_ref7) {\n  var tenant = _ref7.tenant;\n  return \"\".concat(apiPathToOpenConnect({\n    tenant: tenant\n  }), \"/userinfo\");\n};\n\nvar apiPathToLogout = function apiPathToLogout() {\n  var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      tenant = _ref8.tenant;\n\n  return \"\".concat(apiPathToOpenConnect({\n    tenant: tenant\n  }), \"/logout\");\n};\n\nvar apiPathToOpenToken = function apiPathToOpenToken() {\n  var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      tenant = _ref9.tenant;\n\n  return \"\".concat(apiPathToOpenConnect({\n    tenant: tenant\n  }), \"/token\");\n};\n\nvar apiPathToOpenIntrospect = function apiPathToOpenIntrospect() {\n  var _ref10 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      tenant = _ref10.tenant;\n\n  return \"\".concat(apiPathToOpenToken({\n    tenant: tenant\n  }), \"/introspect\");\n};\n\nvar authenticationApiPath = function authenticationApiPath(type, options) {\n  if (!type) {\n    throw Error('missing required argument - type');\n  }\n\n  if (type === 'base') {\n    return authBasePath();\n  }\n\n  if (type === 'auth api') {\n    return apiPathToAuth(options);\n  }\n\n  if (type === 'auth tenant') {\n    return apiPathToAuthTenant(options);\n  }\n\n  if (type === 'auth version') {\n    return apiPathToAuthTenantVersion(options);\n  }\n\n  if (type === 'access management') {\n    return apiPathToManageAccess(options);\n  }\n\n  if (type === 'protocol') {\n    return apiPathToProtocol(options);\n  }\n\n  if (type === 'open connect') {\n    return apiPathToOpenConnect(options);\n  }\n\n  if (type === 'open connect auth') {\n    return apiPathToOpenAuth(options);\n  }\n\n  if (type === 'user info') {\n    return apiPathToOpenUserInfo(options);\n  }\n\n  if (type === 'logout') {\n    return apiPathToLogout(options);\n  }\n\n  if (type === 'token') {\n    return apiPathToOpenToken(options);\n  }\n\n  if (type === 'introspect') {\n    return apiPathToOpenIntrospect(options);\n  }\n};\n\nexport default authenticationApiPath;","map":null,"metadata":{},"sourceType":"module"}