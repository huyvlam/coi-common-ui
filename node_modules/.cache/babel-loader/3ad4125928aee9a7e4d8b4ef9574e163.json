{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { globalScopes, tenantScopes } from 'LIB/coi-scope';\nimport { COI_TENANT, COI_CLIENT } from 'LIB/coi-path/path-config';\nvar DEFAULT_SCOPES = COI_TENANT === 'global' || COI_TENANT === 'cisco' ? globalScopes : tenantScopes;\nvar DEFAULT_REQUEST = {\n  clientId: COI_CLIENT,\n  responseType: 'token',\n  scopes: DEFAULT_SCOPES.join(' ')\n};\nexport var createKeycloakRequest = function createKeycloakRequest() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _DEFAULT_REQUEST$opti = _objectSpread({}, DEFAULT_REQUEST, {}, options),\n      clientId = _DEFAULT_REQUEST$opti.clientId,\n      prompt = _DEFAULT_REQUEST$opti.prompt,\n      responseType = _DEFAULT_REQUEST$opti.responseType,\n      redirectUrl = _DEFAULT_REQUEST$opti.redirectUrl,\n      scopes = _DEFAULT_REQUEST$opti.scopes;\n\n  var request = {\n    client_id: encodeURIComponent(clientId),\n    response_type: responseType,\n    redirect_uri: encodeURIComponent(redirectUrl),\n    scopes: encodeURIComponent(scopes)\n  };\n  return prompt ? _objectSpread({}, request, {\n    prompt: prompt\n  }) : _objectSpread({}, request);\n};","map":null,"metadata":{},"sourceType":"module"}