{"ast":null,"code":"import { COI_CLIENT, COI_TENANT, API_ENV } from 'LIB/coi-path/path-config';\nimport { apiUrl, consulVersion, recoveryVersion, idpEndpointBaseUri, authEndpointBaseUri } from './consul.config.json';\n\nvar addPrefix = function addPrefix() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : API_ENV;\n  return \"https://\".concat(env).concat(url);\n};\n\nexport var apiBasePath = function apiBasePath() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref.env;\n\n  return addPrefix(apiUrl, env);\n};\nexport var apiPathToTenant = function apiPathToTenant() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref2.env,\n      _ref2$tenant = _ref2.tenant,\n      tenant = _ref2$tenant === void 0 ? COI_TENANT : _ref2$tenant;\n\n  return \"\".concat(apiBasePath({\n    env: env\n  }), \"/tenants/\").concat(tenant);\n};\nexport var apiPathToTenantVersion = function apiPathToTenantVersion() {\n  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref3.env,\n      tenant = _ref3.tenant;\n\n  return \"\".concat(apiPathToTenant({\n    env: env,\n    tenant: tenant\n  }), \"/\").concat(consulVersion);\n};\nexport var apiPathToClient = function apiPathToClient() {\n  var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      env = _ref4.env,\n      tenant = _ref4.tenant,\n      _ref4$client = _ref4.client,\n      client = _ref4$client === void 0 ? COI_CLIENT : _ref4$client;\n\n  return \"\".concat(apiPathToTenantVersion({\n    env: env,\n    tenant: tenant\n  }), \"/\").concat(client);\n};\nexport var apiPathToNonTenantVersion = function apiPathToNonTenantVersion() {\n  var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref5$env = _ref5.env,\n      env = _ref5$env === void 0 ? API_ENV : _ref5$env;\n\n  return \"\".concat(apiBasePath({\n    env: env\n  }), \"/\").concat(recoveryVersion);\n};\nexport var authBasePath = function authBasePath() {\n  return authEndpointBaseUri;\n};\nexport var idpBasePath = function idpBasePath() {\n  return idpEndpointBaseUri;\n};\nexport var apiPath = function apiPath(type, options) {\n  if (!type) {\n    throw Error('missing required argument - type');\n  }\n\n  if (type === 'base') {\n    return apiBasePath(options);\n  }\n\n  if (type === 'tenant') {\n    return apiPathToTenant(options);\n  }\n\n  if (type === 'version') {\n    return apiPathToTenantVersion(options);\n  }\n\n  if (type === 'client') {\n    return apiPathToClient(options);\n  }\n\n  if (type === 'non tenant') {\n    return apiPathToNonTenantVersion(options);\n  }\n\n  if (type === 'auth endpoint') {\n    return authBasePath();\n  }\n\n  if (type === 'idp endpoint') {\n    return idpBasePath();\n  }\n};","map":{"version":3,"sources":["/Users/huyster/ui-workspace/coi-common/src/lib/coi-path/api/api-base.js"],"names":["COI_CLIENT","COI_TENANT","API_ENV","apiUrl","consulVersion","recoveryVersion","idpEndpointBaseUri","authEndpointBaseUri","addPrefix","url","env","apiBasePath","apiPathToTenant","tenant","apiPathToTenantVersion","apiPathToClient","client","apiPathToNonTenantVersion","authBasePath","idpBasePath","apiPath","type","options","Error"],"mappings":"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","sourcesContent":["import { COI_CLIENT, COI_TENANT, API_ENV } from 'LIB/coi-path/path-config';\nimport {\n  apiUrl, consulVersion, recoveryVersion, idpEndpointBaseUri, authEndpointBaseUri\n} from './consul.config.json';\n\nconst addPrefix = (url = '', env = API_ENV) => {\n  return `https://${env}${url}`;\n}\n\nexport const apiBasePath = ({ env } = {}) => {\n  return addPrefix(apiUrl, env);\n};\n\nexport const apiPathToTenant = ({ env, tenant = COI_TENANT } = {}) => {\n  return `${apiBasePath({env})}/tenants/${tenant}`;\n};\n\nexport const apiPathToTenantVersion = ({ env, tenant } = {}) => {\n  return `${apiPathToTenant({env, tenant})}/${consulVersion}`;\n};\n\nexport const apiPathToClient = ({ env, tenant, client = COI_CLIENT } = {}) => {\n  return `${apiPathToTenantVersion({ env, tenant })}/${client}`;\n};\n\nexport const apiPathToNonTenantVersion = ({ env = API_ENV } = {}) => {\n  return `${apiBasePath({env})}/${recoveryVersion}`;\n};\n\nexport const authBasePath = () => {\n  return authEndpointBaseUri;\n};\n\nexport const idpBasePath = () => {\n  return idpEndpointBaseUri;\n};\n\nexport const apiPath = (type, options) => {\n  if (!type) {\n    throw Error('missing required argument - type');\n  }\n\n  if (type === 'base') {return apiBasePath(options);}\n  if (type === 'tenant') {return apiPathToTenant(options);}\n  if (type === 'version') {return apiPathToTenantVersion(options);}\n  if (type === 'client') {return apiPathToClient(options);}\n  if (type === 'non tenant') {return apiPathToNonTenantVersion(options);}\n  if (type === 'auth endpoint') {return authBasePath();}\n  if (type === 'idp endpoint') {return idpBasePath();}\n};\n"]},"metadata":{},"sourceType":"module"}